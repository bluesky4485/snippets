---
title: retrofit中使用socks代理
---

```
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Proxy.Type;
import java.net.URL;

import retrofit.client.Request;
import retrofit.client.UrlConnectionClient;

public class SocksProxyUrlConnectionClient extends UrlConnectionClient {

	private String socksIp;
	private int socksPort;

	public SocksProxyUrlConnectionClient(String ip, int port) {
		this.socksIp = ip;
		this.socksPort = port;
	}

	@Override
	protected HttpURLConnection openConnection(Request request)
	throws IOException {
		Proxy proxy = new Proxy(Type.SOCKS, new InetSocketAddress(this.socksIp,
		this.socksPort));
		HttpURLConnection connection = (HttpURLConnection) new URL(
		request.getUrl()).openConnection(proxy);
		connection.setConnectTimeout(15 * 1000);
		connection.setReadTimeout(20 * 1000);
		return connection;
	}

}

```

使用时：
```
Cilent client = new SocksProxyUrlConnectionClient("127.0.0.1",1080);
RestAdapter.Builder builder = new RestAdapter.Builder().setEndpoint("https://api.imgur.com").setRequestInterceptor(new RequestInterceptor() {
	@Override
	public void intercept(final RequestFacade request) {
	request.addHeader("Authorization", "Client-ID "
	+ clientId);
	}
}).setClient(client).build();  

```


附：在HttpURLConnection中设置代理
```
URL url = new URL("https://api.imgur.com/3/image");
Proxy proxy =new Proxy(Type.SOCKS, new InetSocketAddress("127.0.0.1", 1080));
HttpURLConnection uc = (HttpURLConnection) url.openConnection(proxy);

```